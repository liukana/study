// Generated by Dagger (https://google.github.io/dagger).
package com.example.admin.accessibilityservicetest.dagger2;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class Host_Factory implements Factory<Host> {
  private final Provider<String> nameProvider;

  public Host_Factory(Provider<String> nameProvider) {
    this.nameProvider = nameProvider;
  }

  @Override
  public Host get() {
    return provideInstance(nameProvider);
  }

  public static Host provideInstance(Provider<String> nameProvider) {
    return new Host(nameProvider.get());
  }

  public static Host_Factory create(Provider<String> nameProvider) {
    return new Host_Factory(nameProvider);
  }

  public static Host newHost(String name) {
    return new Host(name);
  }
}
