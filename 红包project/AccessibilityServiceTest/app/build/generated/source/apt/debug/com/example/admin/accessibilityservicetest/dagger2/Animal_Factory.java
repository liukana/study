// Generated by Dagger (https://google.github.io/dagger).
package com.example.admin.accessibilityservicetest.dagger2;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class Animal_Factory implements Factory<Animal> {
  private final Provider<Host> hostProvider;

  public Animal_Factory(Provider<Host> hostProvider) {
    this.hostProvider = hostProvider;
  }

  @Override
  public Animal get() {
    return provideInstance(hostProvider);
  }

  public static Animal provideInstance(Provider<Host> hostProvider) {
    return new Animal(hostProvider.get());
  }

  public static Animal_Factory create(Provider<Host> hostProvider) {
    return new Animal_Factory(hostProvider);
  }

  public static Animal newAnimal(Host host) {
    return new Animal(host);
  }
}
